<Button x:Class="Ai.Hong.Controls.VectorButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Ai.Hong.Controls"
             xmlns:comm="clr-namespace:Ai.Hong.Controls"
             mc:Ignorable="d" x:Name="btnControl"
             d:DesignHeight="30" d:DesignWidth="50" Focusable="True" >
    <Button.Style>
        <Style TargetType="Button" >
            <Style.Triggers>
                <Trigger  Property="local:VectorImageButton.KeepSelected" Value="True">
                    <Setter Property="Background"  Value="{Binding RelativeSource={RelativeSource Self}, Path=SelectedColor}"/>
                    <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=SelectedBorder}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Button.Style>
    <Button.Resources>
        <comm:VerticalConvert x:Key="verCovt"/>
        <comm:HorizontalConvert x:Key="horCovt"/>
    </Button.Resources>
    <Button.ContentTemplate>
        <DataTemplate>
            <Border CornerRadius="{Binding ElementName=btnControl,Path=CornerRadius}" Name="controlBorder" Background="{Binding ElementName=btnControl,Path=UnselectedColor}" 
            BorderBrush="{Binding ElementName=btnControl,Path=UnselectedBorder}"  BorderThickness="1"
            Padding="{Binding ElementName=btnControl,Path=ContentPadding}">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True" >
                                <Setter Property="BorderBrush" Value="{Binding ElementName=btnControl,Path=SelectedBorder}"/>
                                <Setter Property="Background" Value="{Binding ElementName=btnControl,Path=SelectedColor}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel Name="rootPanel" Orientation="{Binding ElementName=btnControl, Path=Orientation,Mode=OneWay}" 
                            VerticalAlignment="Center" HorizontalAlignment="Center" Focusable="True">
                    <local:VectorImage x:Name="imgBtn" Margin="{Binding ElementName=btnControl,Path=ImageMargin}" 
                           VectorSource="{Binding ElementName=btnControl, Path=VectorGeometry, Mode=OneWay}"
                                 Width="{Binding ElementName=btnControl,Path=ImageWidth}"
                                Height="{Binding ElementName=btnControl,Path=ImageHeight}"
                           DrawColor="{Binding ElementName=btnControl,Path=ImageColor}"                               
                                 VerticalAlignment="{Binding ElementName=btnControl,Path=Orientation, Converter={StaticResource verCovt}}"
                                HorizontalAlignment="{Binding ElementName=btnControl,Path=Orientation, Converter={StaticResource horCovt}}" >
                        <local:VectorImage.Style>
                            <Style TargetType="local:VectorImage">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=controlBorder, Path=IsMouseOver}" Value="True">
                                        <Setter Property="local:VectorImage.DrawColor" Value="{Binding ElementName=btnControl,Path=ImageSelectedColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </local:VectorImage.Style>
                    </local:VectorImage>
                    <TextBlock Text="{Binding ElementName=btnControl,Path=Text}"  Name="txtBtn" 
                                Margin="{Binding ElementName=btnControl,Path=TextMargin}"
                                 VerticalAlignment="{Binding ElementName=btnControl,Path=Orientation, Converter={StaticResource verCovt}}"
                                HorizontalAlignment="{Binding ElementName=btnControl,Path=Orientation, Converter={StaticResource horCovt}}" >
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </Border>
        </DataTemplate>
    </Button.ContentTemplate>

</Button>
